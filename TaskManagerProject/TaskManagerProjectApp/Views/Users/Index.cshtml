@model IEnumerable<TaskManagerProject.Domain.Entities.MyUser>
@using TaskManagerProject.Domain.Entities;

@{
    ViewBag.Title = "ActivateUser";
}

<h2 class="page-header">All Users Registered </h2>

<p>
    @Html.ActionLink("Create New", "Create",null,new { @class="btn btn-info"})
</p>
<table class="table">
    <tr>
       
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
      
        <th>
            @Html.DisplayNameFor(model => model.AppUserId)
        </th>

        <th>
           Projects (Tasks)
        </th>
        <th>

        </th>

        <th>
            @Html.DisplayNameFor(model => model.DateCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        
        <th colspan="2" class="text-center">Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
           
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>                      

             <td>
                @Html.DisplayFor(modelItem => item.AppUserId)
            </td>

            
            <td>
               @Html.Raw(GetProjectWithTasks(item))
            </td>

           

            <td>
                <a class="btn btn-warning btn-edit" href="/Users/Edit/@item.ID" userId="@item.ID"> Edit </a>
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            
            <td>
                @Html.CheckBoxFor(modelItem => item.IsActive, new { @id="cb-"+@item.AppUserId, @disabled = "disabled" })
            </td>
            <td>
                @if (!item.IsActive)
                {
                  <button class="btn btn-success btn-activate" id="@item.AppUserId"> Activate </button>
                }
               
            </td>
            <td>            
                 <a class="btn btn-danger" href="/Users/Delete/@item.ID"> Delete </a>       
            </td>
        </tr>
    }

</table>

@section scripts{
        <script>
            $(function () {
                $(".btn-activate").on("click", function () {
                    event.preventDefault();
                    var userId = $(this).prop("id");
                    var url = "/Users/Index?userId=" + userId;
                    $.post(url,function(result){
                        console.log(result);
                        $("#cb-" + userId).prop('checked', true);
                        $("#"+userId).hide();
                    });
                    console.log(userId);
                });

                var items = $(".side-nav").find("li");
                items.removeClass("active");
                $(".li-manage").addClass("active");
                
            });
        </script>
    }

@functions{
    public string GetProjectWithTasks(MyUser user)
    {
        if(user.Tasks == null)
        {
            return "";
        }
        var projectsGrouped = user.Tasks.GroupBy(item => item.ProjectId).Select(group => new { ProjectID = group.Key, ProjectName=group.First().Project.Name, Items = group.ToList() })
.ToList();

        string result = "";
        foreach(var neso in projectsGrouped)
        {
            string span = "<span><b>Project</b>:";
            span += "<a href='/Projects/Details/"+neso.ProjectID+"'>"+ neso.ProjectName+"</a> <b>Tasks</b>:(";

            List<string> links = new List<string>();
            foreach(var nesoDrugo in neso.Items)
            {
                links.Add("<a href='/Tasks/Details/" + nesoDrugo.ID + "'>" + nesoDrugo.Name+"</a>");
            }
            span += string.Join(", ", links);
            span += ")</span><br>";

            result += span;
        }
        return result;
    }
}



